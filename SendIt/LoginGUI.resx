<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xubDh/8DKD9/vgqGSYYAAAAASUVORK5CYII=
</value>
  </data>
</root>